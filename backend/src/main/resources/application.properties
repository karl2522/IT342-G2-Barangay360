spring.application.name=backend

# Database Configuration
spring.datasource.url=jdbc:postgresql://ep-divine-thunder-a1yehh7c-pooler.ap-southeast-1.aws.neon.tech/barangay360db?sslmode=require
spring.datasource.username=barangay360db_owner
spring.datasource.password=npg_2H5tdNkfhliJ
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Add more detailed logging for database operations
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.level.org.backend.repository.PostReportRepository=DEBUG
logging.level.org.backend.service.impl.ForumServiceImpl=DEBUG

# Jackson Configuration
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.mapper.propagate-transient-marker=true
spring.jackson.default-property-inclusion=non_null
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# JWT Configuration
app.jwt.secret=Barangay360_Secure_JWT_Secret_Key_For_Authentication_2025_SIA_BACKEND
# 1 hour in milliseconds
app.jwt.expiration=3600000
# 1 day in milliseconds
app.jwt.refresh-token.expiration=86400000

# Server Configuration
server.port=8080

# Google Cloud Storage Configuration
gcp.storage.bucket-name=${GCP_BUCKET_NAME:barangay360-bucket}
gcp.storage.project-id=${GCP_PROJECT_ID:jared-sia}
gcp.storage.credentials.type=${GCP_CREDENTIALS_TYPE:service_account}
gcp.storage.credentials.private-key-id=${GCP_PRIVATE_KEY_ID}
gcp.storage.credentials.private-key=${GCP_PRIVATE_KEY}
gcp.storage.credentials.client-email=${GCP_CLIENT_EMAIL:barangay360@jared-sia.iam.gserviceaccount.com}
gcp.storage.credentials.client-id=${GCP_CLIENT_ID}
gcp.storage.credentials.auth-uri=https://accounts.google.com/o/oauth2/auth
gcp.storage.credentials.token-uri=https://oauth2.googleapis.com/token
gcp.storage.credentials.auth-provider-x509-cert-url=https://www.googleapis.com/oauth2/v1/certs
gcp.storage.credentials.client-x509-cert-url=${GCP_CLIENT_CERT_URL}
gcp.storage.upload-dir=images/

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.deepLinking=true
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json
