spring.application.name=backend

# Import gcp.properties file from the classpath (if it exists)
# Use 'optional:' so the app doesn't fail if gcp.properties is missing
spring.config.import=optional:classpath:gcp.properties

# H2 Database Configuration
spring.datasource.url=jdbc:h2:file:./barangay360db
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# H2 Console Configuration (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true

# Add more detailed logging for database operations
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.level.org.backend.repository.PostReportRepository=DEBUG
logging.level.org.backend.service.impl.ForumServiceImpl=DEBUG

# Jackson Configuration
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.mapper.propagate-transient-marker=true
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# JWT Configuration
app.jwt.secret=${JWT_SECRET:your-256-bit-secret}
app.jwt.key-size=256
app.jwt.access-token.expiration=900000
app.jwt.refresh-token.expiration=604800000
app.jwt.blacklist.cleanup-interval=3600000

# JWT Logging
logging.level.org.backend.security.jwt=DEBUG
logging.level.org.springframework.security=INFO

# Server Configuration
server.port=8080

# Google Cloud Storage Configuration is now loaded from gcp.properties via spring.config.import
# and bound using @ConfigurationProperties in GoogleCloudStorageConfig.java

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.deepLinking=true
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json
